"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.nil = exports.align = exports.alignWith = void 0;
/**
 * @since 0.1.0
 */
var R = __importStar(require("fp-ts/lib/Record"));
var These_1 = require("fp-ts/lib/These");
var function_1 = require("fp-ts/lib/function");
function alignWith(fa, fb, f) {
    var r = {};
    for (var _i = 0, _a = Object.keys(fa); _i < _a.length; _i++) {
        var key = _a[_i];
        if (fb.hasOwnProperty(key)) {
            r[key] = f((0, These_1.both)(fa[key], fb[key]));
        }
        else {
            r[key] = f((0, These_1.left)(fa[key]));
        }
    }
    for (var _b = 0, _c = Object.keys(fb); _b < _c.length; _b++) {
        var key = _c[_b];
        if (!fa.hasOwnProperty(key)) {
            r[key] = f((0, These_1.right)(fb[key]));
        }
    }
    return r;
}
exports.alignWith = alignWith;
function align(fa, fb) {
    return alignWith(fa, fb, function_1.identity);
}
exports.align = align;
/**
 * @since 0.1.0
 */
var nil = function () { return R.empty; };
exports.nil = nil;
