"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.run = exports.execState = exports.evalState = exports.stateTaskEitherSeq = exports.stateTaskEither = exports.Monad = exports.Apply = exports.Applicative = exports.Functor = exports.URI = exports.flatten = exports.chainTaskEitherK = exports.chainIOEitherK = exports.chainEitherK = exports.chainFirst = exports.chain = exports.of = exports.apSecond = exports.apFirst = exports.ap = exports.map = exports.filterOrElse = exports.fromPredicate = exports.fromTaskEitherK = exports.fromIOEitherK = exports.fromEitherK = exports.fromTaskEither = exports.fromIOEither = exports.fromEither = exports.fromOption = exports.rightState = exports.leftState = exports.rightTask = exports.leftTask = exports.rightIO = exports.leftIO = exports.right = exports.left = exports.gets = exports.modify = exports.put = exports.get = void 0;
var function_1 = require("fp-ts/lib/function");
var pipeable_1 = require("fp-ts/lib/pipeable");
var StateT_1 = require("fp-ts/lib/StateT");
var TE = __importStar(require("fp-ts/lib/TaskEither"));
var T = (0, StateT_1.getStateM)(TE.taskEither);
// -------------------------------------------------------------------------------------
// constructors
// -------------------------------------------------------------------------------------
/**
 * @category constructors
 * @since 0.1.0
 */
exports.get = T.get;
/**
 * @category constructors
 * @since 0.1.0
 */
exports.put = T.put;
/**
 * @category constructors
 * @since 0.1.0
 */
exports.modify = T.modify;
/**
 * @category constructors
 * @since 0.1.0
 */
exports.gets = T.gets;
/**
 * @category constructors
 * @since 0.1.0
 */
var left = function (e) { return (0, exports.fromTaskEither)(TE.left(e)); };
exports.left = left;
/**
 * @category constructors
 * @since 0.1.0
 */
exports.right = T.of;
/**
 * @category constructors
 * @since 0.1.0
 */
var leftIO = function (me) { return (0, exports.fromTaskEither)(TE.leftIO(me)); };
exports.leftIO = leftIO;
/**
 * @category constructors
 * @since 0.1.0
 */
var rightIO = function (ma) { return (0, exports.fromTaskEither)(TE.rightIO(ma)); };
exports.rightIO = rightIO;
/**
 * @category constructors
 * @since 0.1.0
 */
var leftTask = function (me) { return (0, exports.fromTaskEither)(TE.leftTask(me)); };
exports.leftTask = leftTask;
/**
 * @category constructors
 * @since 0.1.0
 */
var rightTask = function (ma) { return (0, exports.fromTaskEither)(TE.rightTask(ma)); };
exports.rightTask = rightTask;
/**
 * @category constructors
 * @since 0.1.0
 */
var leftState = function (me) { return function (s) { return TE.left(me(s)[0]); }; };
exports.leftState = leftState;
/**
 * @category constructors
 * @since 0.1.0
 */
exports.rightState = T.fromState;
/**
 * @category constructors
 * @since 0.1.18
 */
var fromOption = function (onNone) { return function (ma) {
    return ma._tag === 'None' ? (0, exports.left)(onNone()) : (0, exports.right)(ma.value);
}; };
exports.fromOption = fromOption;
/**
 * @category constructors
 * @since 0.1.18
 */
var fromEither = function (ma) {
    return ma._tag === 'Left' ? (0, exports.left)(ma.left) : (0, exports.right)(ma.right);
};
exports.fromEither = fromEither;
/**
 * @category constructors
 * @since 0.1.0
 */
var fromIOEither = function (ma) {
    return (0, exports.fromTaskEither)(TE.fromIOEither(ma));
};
exports.fromIOEither = fromIOEither;
/**
 * @category constructors
 * @since 0.1.0
 */
exports.fromTaskEither = T.fromM;
/**
 * @category constructors
 * @since 0.1.10
 */
var fromEitherK = function (f) { return function () {
    var a = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        a[_i] = arguments[_i];
    }
    return (0, exports.fromEither)(f.apply(void 0, a));
}; };
exports.fromEitherK = fromEitherK;
/**
 * @category constructors
 * @since 0.1.10
 */
var fromIOEitherK = function (f) { return function () {
    var a = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        a[_i] = arguments[_i];
    }
    return (0, exports.fromIOEither)(f.apply(void 0, a));
}; };
exports.fromIOEitherK = fromIOEitherK;
/**
 * @category constructors
 * @since 0.1.10
 */
var fromTaskEitherK = function (f) { return function () {
    var a = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        a[_i] = arguments[_i];
    }
    return (0, exports.fromTaskEither)(f.apply(void 0, a));
}; };
exports.fromTaskEitherK = fromTaskEitherK;
/**
 * @category constructors
 * @since 0.1.18
 */
var fromPredicate = function (predicate, onFalse) { return function (a) {
    return predicate(a) ? (0, exports.right)(a) : (0, exports.left)(onFalse(a));
}; };
exports.fromPredicate = fromPredicate;
// -------------------------------------------------------------------------------------
// combinators
// -------------------------------------------------------------------------------------
/**
 * @category combinators
 * @since 0.1.18
 */
var filterOrElse = function (predicate, onFalse) { return function (ma) { return T.chain(ma, function (a) { return (predicate(a) ? (0, exports.right)(a) : (0, exports.left)(onFalse(a))); }); }; };
exports.filterOrElse = filterOrElse;
// -------------------------------------------------------------------------------------
// pipeables
// -------------------------------------------------------------------------------------
/**
 * @category Functor
 * @since 0.1.18
 */
var map = function (f) { return function (fa) { return T.map(fa, f); }; };
exports.map = map;
/**
 * @category Apply
 * @since 0.1.18
 */
var ap = function (fa) { return function (fab) { return T.ap(fab, fa); }; };
exports.ap = ap;
/**
 * @category Apply
 * @since 0.1.18
 */
var apFirst = function (fb) { return function (fa) {
    return (0, pipeable_1.pipe)(fa, (0, exports.map)(function (a) { return function (_) { return a; }; }), (0, exports.ap)(fb));
}; };
exports.apFirst = apFirst;
/**
 * @category Apply
 * @since 0.1.18
 */
var apSecond = function (fb) { return function (fa) {
    return (0, pipeable_1.pipe)(fa, (0, exports.map)(function () { return function (b) { return b; }; }), (0, exports.ap)(fb));
}; };
exports.apSecond = apSecond;
/**
 * @category Applicative
 * @since 0.1.18
 */
exports.of = exports.right;
/**
 * @category Monad
 * @since 0.1.18
 */
var chain = function (f) { return function (ma) { return T.chain(ma, f); }; };
exports.chain = chain;
/**
 * @category Monad
 * @since 0.1.18
 */
var chainFirst = function (f) { return function (ma) {
    return T.chain(ma, function (a) { return T.map(f(a), function () { return a; }); });
}; };
exports.chainFirst = chainFirst;
/**
 * @category Monad
 * @since 0.1.10
 */
var chainEitherK = function (f) { return (0, exports.chain)((0, exports.fromEitherK)(f)); };
exports.chainEitherK = chainEitherK;
/**
 * @category Monad
 * @since 0.1.10
 */
var chainIOEitherK = function (f) { return (0, exports.chain)((0, exports.fromIOEitherK)(f)); };
exports.chainIOEitherK = chainIOEitherK;
/**
 * @category Monad
 * @since 0.1.10
 */
var chainTaskEitherK = function (f) { return (0, exports.chain)((0, exports.fromTaskEitherK)(f)); };
exports.chainTaskEitherK = chainTaskEitherK;
/**
 * @category Monad
 * @since 0.1.18
 */
var flatten = function (mma) { return T.chain(mma, function_1.identity); };
exports.flatten = flatten;
// -------------------------------------------------------------------------------------
// instances
// -------------------------------------------------------------------------------------
/**
 * @category instances
 * @since 0.1.0
 */
exports.URI = 'StateTaskEither';
/**
 * @category instances
 * @since 0.1.18
 */
exports.Functor = {
    URI: exports.URI,
    map: T.map
};
/**
 * @category instances
 * @since 0.1.18
 */
exports.Applicative = {
    URI: exports.URI,
    map: T.map,
    ap: T.ap,
    of: exports.of
};
/**
 * @category instances
 * @since 0.1.18
 */
exports.Apply = {
    URI: exports.URI,
    map: T.map,
    ap: T.ap
};
/**
 * @category instances
 * @since 0.1.18
 */
exports.Monad = {
    URI: exports.URI,
    map: T.map,
    ap: T.ap,
    chain: T.chain,
    of: exports.of
};
/**
 * @category instances
 * @since 0.1.0
 */
exports.stateTaskEither = {
    URI: exports.URI,
    map: T.map,
    of: exports.right,
    ap: T.ap,
    chain: T.chain,
    throwError: exports.left
};
/**
 * Like `stateTaskEither` but `ap` is sequential
 *
 * @category instances
 * @since 0.1.0
 */
exports.stateTaskEitherSeq = __assign(__assign({}, exports.stateTaskEither), { ap: function (mab, ma) { return T.chain(mab, function (f) { return T.map(ma, f); }); } });
// -------------------------------------------------------------------------------------
// utils
// -------------------------------------------------------------------------------------
/**
 * @since 0.1.0
 */
exports.evalState = T.evalState;
/**
 * @since 0.1.0
 */
exports.execState = T.execState;
/**
 * @since 0.1.0
 */
var run = function (ma, s) { return ma(s)(); };
exports.run = run;
